Attribute VB_Name = "Module111"
' not used
Sub filter2()
    
    ActiveSheet.Rows(604622).Delete
    For i = ActiveSheet.Cells(Rows.Count, 1).End(xlUp).Row To 2 Step -1
        
        ' if cvss is below 8
        If (ActiveSheet.Cells(i, 3).Value < 8) Then
            ActiveSheet.Rows(i).EntireRow.Delete
            ' VBA continue
            GoTo filContinue
        End If
        ' filters for both, should be or?
        ' exploit above 1
        If (ActiveSheet.Cells(i, 4).Value < 1) Then
            ActiveSheet.Rows(i).EntireRow.Delete
            ' VBA continue
            GoTo filContinue
        End If
        
filContinue:
    Next
    
    
End Sub
Sub filter()
    Dim delRange As Range
    Set delRange = Nothing
    Lastrow = ActiveSheet.Cells(Rows.Count, 1).End(xlUp).Row
    For Each entry In ActiveWorkbook.Worksheets(1).Range("A2:V" & Lastrow).Rows
        
        ' if cvss is below 8
        ' exploit above 1
        If (entry.Cells(3).Value < 8 Or entry.Cells(4).Value < 1) Then
            If delRange Is Nothing Then
                Set delRange = entry.Cells
            Else
                Set delRange = Union(delRange, entry.Cells)
            End If
        End If
    Next entry
    
    If Not delRange Is Nothing Then
        ' delete row and free dim
        delRange.Rows.Delete
    End If
    Set delRange = Nothing
    
End Sub
Sub remPresentDup()
    ' Remove duplicate data in current worksheet
    Lastrow = ActiveSheet.Cells(Rows.Count, 1).End(xlUp).Row
    ActiveSheet.Range("A1:V" & Lastrow).RemoveDuplicates Columns:=Array(1, 2, 9)

End Sub
' not used
Sub remPastDupFast(pastMonth As String)
    ' copying worksheet to workbook, better for performance vs reading from file
    Workbooks.Open(pastMonth).Worksheets(1).Copy After:=ActiveWorkbook.Worksheets(1)
    Workbooks.Item(Workbooks.Count).Close
    Lastrow = ActiveSheet.Cells(Rows.Count, 1).End(xlUp).Row
    pLastrow = ActiveWorkbook.Worksheets(2).Cells(Rows.Count, 1).End(xlUp).Row
    
        ' checking each entry for a duplicate
    Dim delRange As Range, cRng() As Variant, pRng() As Variant
    Set cRng = ActiveWorkbook.Worksheets(1).Range("A2:V" & Lastrow)
    Set pRng = ActiveWorkbook.Worksheets(2).Range("A2:V" & pLastrow)
    Set delRange = Nothing
    
    For C = 2 To UBound(cRng, 1)
        For P = 2 To UBound(pRng, 1)
        
            ' comparing on IP, Asset, And Vuln Title
            ' If (entry.Cells(1).Value = pRow.Cells(1).Value And entry.Cells(2).Value = pRow.Cells(2).Value And entry.Cells(9).Value = pRow.Cells(9).Value) Then
            If (cRng(C, 1) = pRng(P, 1)) Then
                If (cRng(C, 1) = pRng(P, 1)) Then
                    If (cRng(C, 1) = pRng(P, 1)) Then
                        ' entry.Cells.Delete # deletes rows during loop which pushes iterator forward
                        ' gather rows
                        If delRange Is Nothing Then
                            Set delRange = ActiveWorkBooks.Worksheets(1).Range("A" & C & ":V" & C)
                        Else
                            Set delRange = Union(delRange, ActiveWorkBooks.Worksheets(1).Range("A" & C & ":V" & C))
                        End If
                        
                        ' next value
                        Exit For
                    End If
                End If
            End If
            
        Next P
    Next C
    
    ' delete row and free dim
    If Not delRange Is Nothing Then
        ' delete row and free dim
        delRange.Rows.Delete
    End If
    Set delRange = Nothing
    
    Application.DisplayAlerts = False
    ActiveWorkbook.Worksheets(2).Delete
    Application.DisplayAlerts = True


End Sub
Sub remPastDup(pastMonth As String)
    
    ' copying worksheet to workbook, better for performance vs reading from file
    Workbooks.Open(pastMonth).Worksheets(1).Copy After:=ActiveWorkbook.Worksheets(1)
    Workbooks.Item(Workbooks.Count).Close
    Lastrow = ActiveSheet.Cells(Rows.Count, 1).End(xlUp).Row
    pLastrow = ActiveWorkbook.Worksheets(2).Cells(Rows.Count, 1).End(xlUp).Row
    
    ' checking each entry for a duplicate
    Dim delRange As Range, cRng As Range, pRng As Range
    Set cRng = ActiveWorkbook.Worksheets(1).Range("A2:V" & Lastrow)
    Set pRng = ActiveWorkbook.Worksheets(2).Range("A2:V" & pLastrow)
    Set delRange = Nothing
    For Each entry In cRng.Rows
        For Each pRow In pRng.Rows
        
            ' comparing on IP, Asset, And Vuln Title
            ' If (entry.Cells(1).Value = pRow.Cells(1).Value And entry.Cells(2).Value = pRow.Cells(2).Value And entry.Cells(9).Value = pRow.Cells(9).Value) Then
            If (entry.Cells(1).Value = pRow.Cells(1).Value) Then
                If (entry.Cells(2).Value = pRow.Cells(2).Value) Then
                    If (entry.Cells(9).Value = pRow.Cells(9).Value) Then
                        ' entry.Cells.Delete # deletes rows during loop which pushes iterator forward
                        ' gather rows
                        If delRange Is Nothing Then
                            Set delRange = entry.Cells
                        Else
                            Set delRange = Union(delRange, entry.Cells)
                        End If
                        
                        ' next value
                        Exit For
                    End If
                End If
            End If
            
        Next pRow
    Next entry
    
    ' delete row and free dim
    If Not delRange Is Nothing Then
        ' delete row and free dim
        delRange.Rows.Delete
    End If
    Set delRange = Nothing
    
    Application.DisplayAlerts = False
    ActiveWorkbook.Worksheets(2).Delete
    Application.DisplayAlerts = True

End Sub
Sub Main()
    ' Query for past month file
    Dim pastMonth As String
    Dim openFile As FileDialog
    Application.StatusBar = "Querying Past Months data"
    Set openFile = Application.FileDialog(msoFileDialogFilePicker)
    With openFile
        .AllowMultiSelect = False
        .Filters.Add "Excel Files", "*.xls; *.xlsx; *.xlsm; *.xlsb", 1
        .Show
        If .SelectedItems.Count > 0 Then
            pastMonth = .SelectedItems.Item(1)
        Else
            Exit Sub
        End If
    End With
    

    screenUpdateState = Application.ScreenUpdating
    statusBarState = Application.DisplayStatusBar
    calcState = Application.Calculation
    eventsState = Application.EnableEvents
    displayPageBreakState = ActiveSheet.DisplayPageBreaks
    Application.ScreenUpdating = False
    Application.DisplayStatusBar = False
    Application.Calculation = xlCalculationManual
    Application.EnableEvents = False
    ActiveSheet.DisplayPageBreaks = False
    
    ' Remove present duplicates
    Application.StatusBar = "Removing Current Duplicates"
    remPresentDup
    
    ' Filtering, before past duplicate more efficient
    Application.StatusBar = "Filtering"
    filter
    
    ' Remove past duplicates
    Application.StatusBar = "Removing Past Months entries"
    remPastDup (pastMonth)
  
    Application.ScreenUpdating = screenUpdateState
    Application.DisplayStatusBar = statusBarState
    Application.Calculation = calcState
    Application.EnableEvents = eventsState
    ActiveSheet.DisplayPageBreaks = displayPageBreaksState
    
End Sub
